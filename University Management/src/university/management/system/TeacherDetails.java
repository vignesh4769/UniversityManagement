package university.management.system;import net.proteanit.sql.DbUtils;import javax.swing.*;import java.awt.*;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.sql.ResultSet;public class TeacherDetails extends JFrame implements ActionListener {    Choice choice;    JTable table;    JButton search, print, update, add, cancel;    TeacherDetails() {        getContentPane().setBackground(new Color(192, 164, 252));        JLabel heading = new JLabel("Search by Employee ID");        heading.setBounds(20, 20, 200, 25);        heading.setFont(new Font("Tahoma", Font.BOLD, 16));        add(heading);        choice = new Choice();        choice.setBounds(220, 20, 150, 25);        add(choice);        try {            Conn c = new Conn();            ResultSet rs = c.statement.executeQuery("SELECT employee_id FROM teacher");            while (rs.next()) {                choice.add(rs.getString("employee_id"));            }        } catch (Exception e) {            e.printStackTrace();        }        table = new JTable();        try {            Conn c = new Conn();            ResultSet rs = c.statement.executeQuery("SELECT * FROM teacher");            table.setModel(DbUtils.resultSetToTableModel(rs));        } catch (Exception e) {            e.printStackTrace();        }        JScrollPane js = new JScrollPane(table);        js.setBounds(0, 100, 900, 600);        add(js);        search = new JButton("Search");        search.setBounds(20, 70, 80, 25);        search.addActionListener(this);        add(search);        print = new JButton("Print");        print.setBounds(120, 70, 80, 25);        print.addActionListener(this);        add(print);        add = new JButton("Add");        add.setBounds(220, 70, 80, 25);        add.addActionListener(this);        add(add);        update = new JButton("Update");        update.setBounds(320, 70, 80, 25);        update.addActionListener(this);        add(update);        cancel = new JButton("Cancel");        cancel.setBounds(420, 70, 80, 25);        cancel.addActionListener(this);        add(cancel);        setLayout(null);        setSize(900, 700);        setLocation(300, 100);        setVisible(true);    }    @Override    public void actionPerformed(ActionEvent e) {        if (e.getSource() == search) {            String q = "SELECT * FROM teacher WHERE employee_id = '" + choice.getSelectedItem() + "'";            try {                Conn c = new Conn();                ResultSet rs = c.statement.executeQuery(q);                table.setModel(DbUtils.resultSetToTableModel(rs));            } catch (Exception ex) {                ex.printStackTrace();            }        } else if (e.getSource() == print) {            try {                table.print();            } catch (Exception ex) {                ex.printStackTrace();            }        } else if (e.getSource() == add) {            setVisible(false);            new AddFaculty();        } else if (e.getSource() == update) {            // Add update logic or redirect to UpdateTeacher class            JOptionPane.showMessageDialog(null, "Update functionality coming soon.");        } else {            setVisible(false);        }    }    public static void main(String[] args) {        new TeacherDetails();    }}