package university.management.system;import javax.swing.*;import java.awt.*;import java.awt.event.*;import java.sql.*;public class UpdateTeacher extends JFrame implements ActionListener {    JTextField textAddress, textPhone, textemail, textAadhar, textcourse, textbranch;    JLabel empText, textName, textfather, dobdob, textM10, textM12;    JButton submit, cancel;    Choice cEMPID;    UpdateTeacher() {        getContentPane().setBackground(new Color(230, 210, 252));        JLabel heading = new JLabel("Update Teacher Details");        heading.setBounds(50, 10, 500, 50);        heading.setFont(new Font("serif", Font.BOLD, 35));        add(heading);        JLabel empID = new JLabel("Select Employee ID");        empID.setBounds(50, 100, 200, 20);        empID.setFont(new Font("serif", Font.PLAIN, 20));        add(empID);        cEMPID = new Choice();        cEMPID.setBounds(250, 100, 200, 20);        add(cEMPID);        try {            Conn c = new Conn();            ResultSet rs = c.statement.executeQuery("SELECT * FROM teacher");            while (rs.next()) {                cEMPID.add(rs.getString("employee_id"));            }        } catch (Exception e) {            e.printStackTrace();        }        // UI Labels        textName = createLabel("Name", 50, 150); add(textName);        textfather = createLabel("Father Name", 400, 150); add(textfather);        empText = createLabel("Employee ID", 50, 200); empText.setFont(new Font("serif", Font.BOLD, 20)); add(empText);        dobdob = createLabel("Date of Birth", 400, 200); add(dobdob);        textM10 = createLabel("Class X (%)", 400, 300); add(textM10);        textM12 = createLabel("Class XII (%)", 50, 350); add(textM12);        textAddress = createTextField("Address", 50, 250); add(textAddress);        textPhone = createTextField("Phone", 400, 250); add(textPhone);        textemail = createTextField("Email", 50, 300); add(textemail);        textAadhar = createTextField("Aadhar Number", 400, 350); add(textAadhar);        textcourse = createTextField("Qualification", 50, 400); add(textcourse);        textbranch = createTextField("Department", 400, 400); add(textbranch);        loadData(cEMPID.getSelectedItem());        cEMPID.addItemListener(e -> loadData(cEMPID.getSelectedItem()));        submit = new JButton("Update");        submit.setBounds(250, 550, 120, 30);        submit.setBackground(Color.black);        submit.setForeground(Color.white);        submit.addActionListener(this);        add(submit);        cancel = new JButton("Cancel");        cancel.setBounds(450, 550, 120, 30);        cancel.setBackground(Color.black);        cancel.setForeground(Color.white);        cancel.addActionListener(this);        add(cancel);        setSize(900, 700);        setLocation(350, 50);        setLayout(null);        setVisible(true);    }    JLabel createLabel(String text, int x, int y) {        JLabel label = new JLabel(text);        label.setBounds(x, y, 200, 30);        label.setFont(new Font("serif", Font.BOLD, 20));        add(label);        JLabel value = new JLabel();        value.setBounds(x + 150, y, 150, 30);        add(value);        return value;    }    JTextField createTextField(String labelText, int x, int y) {        JLabel label = new JLabel(labelText);        label.setBounds(x, y, 200, 30);        label.setFont(new Font("serif", Font.BOLD, 20));        add(label);        JTextField tf = new JTextField();        tf.setBounds(x + 150, y, 150, 30);        return tf;    }    void loadData(String empId) {        try {            Conn c = new Conn();            ResultSet rs = c.statement.executeQuery("SELECT * FROM teacher WHERE employee_id = '" + empId + "'");            if (rs.next()) {                textName.setText(rs.getString("name"));                textfather.setText(rs.getString("father_name"));                empText.setText(rs.getString("employee_id"));                dobdob.setText(rs.getString("dob"));                textAddress.setText(rs.getString("address"));                textPhone.setText(rs.getString("phone"));                textemail.setText(rs.getString("email"));                textM10.setText(rs.getString("class10_percent"));                textM12.setText(rs.getString("class12_percent"));                textAadhar.setText(rs.getString("aadhar"));                textcourse.setText(rs.getString("qualification"));                textbranch.setText(rs.getString("department"));            }        } catch (Exception e) {            e.printStackTrace();        }    }    @Override    public void actionPerformed(ActionEvent e) {        if (e.getSource() == submit) {            try {                String empid = empText.getText();                String address = textAddress.getText();                String phone = textPhone.getText();                String email = textemail.getText();                String qualification = textcourse.getText();                String department = textbranch.getText();                String aadhar = textAadhar.getText();                Conn c = new Conn();                String query = "UPDATE teacher SET address=?, phone=?, email=?, aadhar=?, qualification=?, department=? WHERE employee_id=?";                PreparedStatement pst = c.connection.prepareStatement(query);                pst.setString(1, address);                pst.setString(2, phone);                pst.setString(3, email);                pst.setString(4, aadhar);                pst.setString(5, qualification);                pst.setString(6, department);                pst.setString(7, empid);                pst.executeUpdate();                JOptionPane.showMessageDialog(null, "Details Updated Successfully!");                setVisible(false);            } catch (Exception ex) {                ex.printStackTrace();            }        } else {            setVisible(false);        }    }    public static void main(String[] args) {        new UpdateTeacher();    }}